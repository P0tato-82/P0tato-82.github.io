<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CTFHUB文件上传</title>
    <link href="/2021/01/28/CTFHUB%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <url>/2021/01/28/CTFHUB%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><p>文件上传漏洞是指攻击者上传了一个可执行的脚本文件到服务器，并执通过此脚本文件获得执行服务端命令的能力。这里上传的文件可以是木马，病毒，恶意脚本，钓鱼图片或者WebShell等。这种攻击方式是最为直接和有效的，</p><h2 id="类型一：无验证"><a href="#类型一：无验证" class="headerlink" title="类型一：无验证"></a>类型一：无验证</h2><p>上传一句话木马，使用蚁剑连接获得flag</p><h2 id="类型二：前端验证"><a href="#类型二：前端验证" class="headerlink" title="类型二：前端验证"></a>类型二：前端验证</h2><p>题目会规定上传类型，如果说判断速度较快基本上可以判断为前端验证。<br></p><ul><li>方法一：此时写一个一句话木马并保存为可上传的文件。再使用Burp抓包,修改文件后缀为.php即可。<br></li><li>方法二：浏览器禁用JavaScript，防止验证文件后缀名。</li></ul><h2 id="类型三：-htaccess文件上传"><a href="#类型三：-htaccess文件上传" class="headerlink" title="类型三：.htaccess文件上传"></a>类型三：.htaccess文件上传</h2><blockquote><p>htaccess 文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。- 通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。<br><br><a href="https://httpd.apache.org/docs/current/howto/htaccess.html">.htassess官方文档</a><br></p></blockquote><p>法一：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># FileMatch 参数即为文件名的正则匹配</span><br><span class="hljs-section">&lt;FilesMatch <span class="hljs-string">&quot;sniperoj&quot;</span>&gt;</span><br>  <span class="hljs-attribute"><span class="hljs-nomarkup">SetHandler</span></span> application/x-httpd-php<br><span class="hljs-section">&lt;/FilesMatch&gt;</span><br><span class="hljs-comment">#进行文件名的正则匹配，服务器会对文件名为sniperoj当做php解析</span><br></code></pre></td></tr></table></figure><p>法二：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">AddType <span class="hljs-built_in">application</span>/x-httpd-php .jpg<br></code></pre></td></tr></table></figure><h2 id="类型四：MIME绕过"><a href="#类型四：MIME绕过" class="headerlink" title="类型四：MIME绕过"></a>类型四：MIME绕过</h2><p><strong>MIME：</strong><br>客户端软件，区分不同种类的数据，例如web浏览器就是通过MIME类型来判断文件是GIF图片，还是可打印的PostScript文件。web服务器使用MIME来说明发送数据的种类， web客户端使用MIME来说明希望接收到的数据种类。<br>服务端MIME类型检测是通过检查http包的Content-Type字段中的值来判断上传文件是否合法的。</p><p>常见的content-type字段：</p><blockquote><p>   image/jpeg ：jpg图片格式<br>    image/png  ：png图片格式<br>    image/gif  ：gif图片格式<br>    text/plain ：纯文本格式<br>    text/xml   ：  XML格式<br>    text/html  ： HTML格式<br>    multipart/form-data ： 需要在表单中进行文件上传时，就需要使用该格式</p></blockquote><hr><p><strong>图片木马的制作：</strong><br>cmd执行：<br><code>copy logo.jpg/b+test.php/a test.jpg</code></p><p><strong>logo.jpg</strong> 为任意图片<br><br><strong>test.php</strong> 为我们要插入的木马代码<br><br><strong>test.jpg</strong> 为我们要创建的图片马<br><br>格式图片必须在php文件前面<br>注意：图片的内容要尽量简短，以防内容过于复杂存在的一些字符会影响到原来的php内容(可以用画图工具直接新建一个画图然后保存)</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>洛谷P1116</title>
    <link href="/2021/01/27/%E6%B4%9B%E8%B0%B7P1116/"/>
    <url>/2021/01/27/%E6%B4%9B%E8%B0%B7P1116/</url>
    
    <content type="html"><![CDATA[<hr><p>因为最近在学java，先找点简单题做做，将这道题用java写一遍。<br><br>这个题较为简单，冒泡排序依次记步即可。<br></p><h1 id="原题："><a href="#原题：" class="headerlink" title="原题："></a>原题：</h1><p><img src="https://i.loli.net/2021/01/27/qmpG78gJ4ZsoBDc.png#pic_center=500x500" alt="P116.png"></p><h1 id="C语言："><a href="#C语言：" class="headerlink" title="C语言："></a>C语言：</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">int</span> n,sum=<span class="hljs-number">0</span>,*p;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    p=(<span class="hljs-keyword">int</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-keyword">int</span>)*n);<br><br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-keyword">for</span> (i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;p[i]);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">for</span>(j=<span class="hljs-number">0</span>;j&lt;i;j++)&#123;<br>            <span class="hljs-keyword">if</span>(p[j]&gt;p[i])&#123;<br>                sum++;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,sum);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="Java："><a href="#Java：" class="headerlink" title="Java："></a>Java：</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>Scanner in=<span class="hljs-keyword">new</span> Scanner(System.in);<br><span class="hljs-keyword">int</span> n,sum=<span class="hljs-number">0</span>;<br>n=in.nextInt();<br><span class="hljs-keyword">int</span>[] p =<span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[n];<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) &#123;<br>p[i]=in.nextInt();<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) &#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;i;j++) &#123;<br><span class="hljs-keyword">if</span>(p[j]&gt;p[i])&#123;<br>                sum++;<br>            &#125;<br>&#125;<br>&#125;<br>System.out.println(sum+<span class="hljs-string">&quot; &quot;</span>);<br>in.close();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/01/27/hello-world/"/>
    <url>/2021/01/27/hello-world/</url>
    
    <content type="html"><![CDATA[<p>搞了一天的博客终于搞好了<br><br>emmm比想象中简单点<br><br>撒花</p><p>（又是没学高数的一天</p>]]></content>
    
    
    
    <tags>
      
      <tag>others</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
